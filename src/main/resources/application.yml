server:
  port: 8080

spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: 123456
    url: jdbc:mysql://localhost:3306/myshop?characterEncoding=UTF-8&useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai

    # 这是用于 mycat 分库分表用的
#    url: jdbc:mysql://localhost:8066/TESTDB?characterEncoding=UTF-8&useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    #correlated值是发布消息成功到交换器后会触发回调方法
    publisher-confirm-type: correlated
    #如果对异步消息需要回调必须设置为true
    publisher-returns: true
    listener:
      simple:
        #消费者数量
        concurrency: 5
        #最大消费者数量
        max-concurrency: 10
        #消费者每次从队列获取的消息数量。写多了，如果长时间得不到消费，数据就一直得不到处理
        prefetch: 1
        #消费接收确认机制-手动确认
        acknowledge-mode: manual

  redis:
    # Redis数据库索引（默认为0）
    database: 1
    # Redis服务器地址
    host: localhost
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 20
        # 连接池中的最大空闲连接
        max-idle: 20
        # 连接池中的最小空闲连接
        min-idle: 0
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
    # 连接超时时间（毫秒）默认是2000ms
    timeout: 3000ms
    # 自定义redis key
redis:
  key:
    prefix:
      authCode: "portal:authCode:"
    expire:
      authCode: 120  # 验证码超期时间






logging:
  level:
    com.springboot: debug
    java.sql.PreparedStatement: debug
    com.lawt.repository.mapper: debug


#mybatis-plus:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
